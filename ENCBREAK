Mode = 2 -- 1 public 2 sl
UsePlat = true
Webhook = "https://discord.com/api/webhooks/"
IDMessage = "1229134363023900744"
bot = getBot()

math.randomseed(os.time())
function places(id,x,y)
    bot:place(bot.x+x,bot.y+y,id)
end
function punch(x,y)
    bot:hit(bot.x+x,bot.y+y)
end
function tulis(text)
    file = io.open("BREAK.txt","a")
    file:write(text.."\n")
    file:close()
end

function divide_tile(length)
    local num_sections = DoorCount
    local section_length = length / num_sections
    local sections = {}

    for i = 1, num_sections do
        table.insert(sections, {start = (i - 1) * section_length + 1, finish = i * section_length})
    end

    return sections
end

local tile_length = 99
local divided_sections = divide_tile(tile_length)
function reconnect(world, id, x, y)
    if bot.status ~= BotStatus.online or bot:getPing() == 0 then
        bot.auto_reconnect = true
        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(1000)
            if bot.status == BotStatus.account_banned then
                stopScript()
            end
        end
        while not bot:isInWorld(world:upper()) do
            bot:sendPacket(3, "action|join_request\nname|" .. world:upper() .. "|" .. id:upper() .. "\ninvitedWorld|0")
            sleep(6000)
        end
        if id ~= "" and getTile(bot.x, bot.y).fg == 6 then
            bot:sendPacket(3, "action|join_request\nname|" .. world:upper() .. "|" .. id:upper() .. "\ninvitedWorld|0")
            sleep(1000)
        end
        if x and y and (bot.x ~= x or bot.y ~= y) then
            bot:findPath(x, y)
            sleep(100)
            bot.auto_reconnect = false
        end
 
    end
end

function generateRandomWorld(length)
    local characters
    local include_numbers = WithNumber
    if include_numbers then
        characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    else
        characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    end
    local randomWorld = ""
    for i = 1, length do
        local randomIndex = math.random(1, #characters)
        randomWorld = randomWorld .. string.sub(characters, randomIndex, randomIndex)
    end
    return randomWorld
end
worldj = {}
function nyariworld()
    world = generateRandomWorld(Letter)
    ::ulang::
    bot:sendPacket(3, "action|join_request\nname|" .. world .. "\ninvitedWorld|0")
    sleep(5000)
    if bot:isInWorld(world:upper())then
    for _, check in pairs(bot:getWorld():getTiles()) do
        if check.fg == 242 or check.fg == 9640 or check.fg == 202 or check.fg == 204 or check.fg == 206 then
            goto ulang
        end
    end
else
    goto ulang
end
end
function warp(world, id)
    cok = 0
    while not bot:isInWorld(world:upper())  do
        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(1000)
        end
        if id ~= "" then
            bot:sendPacket(3, "action|join_request\nname|" .. world:upper() .. "|" .. id:upper() .. "\ninvitedWorld|0")
        else
            bot:sendPacket(3, "action|join_request\nname|" .. world:upper() .. "\ninvitedWorld|0")
        end
        sleep(10000)
        if cok == 5 then
            for i = 1, 300 do
                sleep(1000)
                if bot:isInWorld(world:upper()) then
                    break
                end
            end
            cok = 0
        else
            cok = cok + 1
        end
    end
    if id ~= "" and bot:getWorld():getTile(bot.x, bot.y).fg == 6 then
        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(1000)
        end
        for i = 1, 3 do
            if getTile(bot.x, bot.y).fg == 6 then
                bot:sendPacket(3,"action|join_request\nname|" .. world:upper() .. "|" .. id:upper() .. "\ninvitedWorld|0")
                sleep(2000)
            end
        end
    end
end

function take(ids,Create)
    while bot:getInventory():findItem(ids) < Create do
        for _, obj in pairs(bot:getWorld():getObjects()) do
            if obj.id == ids then
                bot:findPath(math.floor(obj.x / 32), math.floor(obj.y / 32))
                sleep(250)
                bot.collect_range = 2
                bot.auto_collect = true
            end
            if bot:getInventory():findItem(ids) >= Create then
                bot.auto_collect = false
                break
            end
        end
    end
end

function invs()
    inv  = ""
  inventory = getBot():getInventory()
  for i, item in pairs(inventory:getItems()) do
    inv = inv.."\n"..inventory:findItem(item.id).." "..getInfo(item.id).name
  end
  return inv
  end
  function w()
    a = ""
    for index, value in ipairs(worldj) do
    a = a.."\n"..value
    end   
    return a
  end
  local GetBot = function()
    local status = bot.status
    local status_Naming = {
        [BotStatus.offline] = "Offline",
        [BotStatus.online] = "Online",
        [BotStatus.account_banned] = "Banned",
        [BotStatus.location_banned] = "Location Banned",
        [BotStatus.server_overload] = "Login Failed",
        [BotStatus.too_many_login] = "Login Failed",
        [BotStatus.maintenance] = "Maintenance",
        [BotStatus.version_update] = "Version Update",
        [BotStatus.server_busy] = "Server Busy",
        [BotStatus.error_connecting] = "Error Connecting",
        [BotStatus.logon_fail] = "Login Failed",
        [BotStatus.http_block] = "HTTP Blocked",
        [BotStatus.wrong_password] = "Wrong Password",
        [BotStatus.advanced_account_protection] = "Advanced Account Protection",
        [BotStatus.bad_name_length] = "Bad Name Length",
        [BotStatus.invalid_account] = "Invalid Account",
        [BotStatus.guest_limit] = "Guest Limit",
        [BotStatus.changing_subserver] = "Changing Subserver",
        [BotStatus.captcha_requested] = "Captcha",
        [BotStatus.mod_entered] = "Mod Entered",
        [BotStatus.high_load] = "High Load"
    }
    return status_Naming[status] or "offline"
  end
  
  function pep(link, id)
    local text =
        [[
          $webHookUrl = "]] ..link ..[[/messages/]] ..id ..[["
        $thumbnailObject = @{
            url = ""
        }
        $footerObject = @{
            text = "]] ..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60)) ..[["
        }
        $fieldArray = @(
            @{
                name = "World"
                value = "]] ..w()..[["
                inline = "false"
            }
            @{
                name = "inventory"
                value = "]]..invs()..[["
                inline = "false"
            }
            @{
                name = "Status"
                value = "]] ..GetBot() ..[["
                inline = "false"
            }
        )
        $embedObject = @{
            title = "**INFORMATION**"
            color = "16777215"
            thumbnail = $thumbnailObject
            footer = $footerObject
            fields = $fieldArray
        }
        $embedArray = @($embedObject)
        $payload = @{
            embeds = $embedArray
        }
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
    ]]
    local file = io.popen("powershell -command -", "w")
    file:write(text)
    file:close()
end
  
function drop(values,Create)
    bot:sendPacket(2, "action|drop\n|itemID|" .. values)
    sleep(500)
    bot:sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|" ..values .. "|\ncount|" .. bot:getInventory():findItem(values)-Create)
    sleep(1500)
end

function isLicenseValid()
    local client = HttpClient.new()
    client.url = "https://raw.githubusercontent.com/Artzyasq/LICENSE-1/main/LISENSI"
    local licenses = load(client:request().body)()
    for key, value in pairs(licenses) do
        if value == getUsername() then
            return true
        end
    end
    return false
end

print("[Cema Script] [Status : Success Login]")
if isLicenseValid() then
    print("[Cema Script] [Status : Success Login]")

warp(WorldTake,IDWorldTake)
take(IDDoor,Create*DoorCount)
bot:moveTo(-1,0)
sleep(200)
drop(IDDoor,Create*DoorCount)

take(IDPlatform,Create*DoorCount)
bot:moveTo(-1,0)
sleep(200)
drop(IDPlatform,Create*DoorCount)

take(IDEntrance,Create*2)
bot:moveTo(-1,0)
sleep(200)
drop(IDEntrance,Create*2)

take(226,Create)
bot:moveTo(-1,0)
sleep(200)
drop(226,Create)
if Mode == 1 then
    take(242,Create)
bot:moveTo(-1,0)
sleep(200)
drop(242,Create)
end
take(202,Create)
bot:moveTo(-1,0)
sleep(200)
drop(202,Create)

for i =  1 ,Create do
    nyariworld()
    for key, tile in pairs(getTiles()) do
        if tile.fg == 6 then
            bot:findPath(tile.x,tile.y)
            sleep(1000)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

            while getTile(tile.x+1,tile.y).fg ~= IDEntrance do
                places(IDEntrance,1,0)
                sleep(250)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

            end
            while getTile(tile.x-1,tile.y).fg ~= IDEntrance do
                places(IDEntrance,-1,0)
                sleep(250)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

            end
            while getTile(tile.x,tile.y-1).fg ~= 202 do
                places(202,0,-1)
                sleep(250)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

            end
            sleep(200)
            while getTile(bot.x+1,bot.y-1).fg ~= 226 do
                places(226,1,-1)
                sleep(500) 
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

            end
            punch(1,-1)
            sleep(1000)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

        end
    end
    
    if Mode == 1 then
        while getTile(bot.x+1,bot.y-1).fg ~= 242 do
            places(242,1,-1)
            sleep(500) 
            reconnect(bot:getWorld().name,"",bot.x,bot.y)

        end 
        for _ , tile in pairs(getTiles()) do
            if tile.fg == 242 then
                bot:findPath(tile.x,tile.y-1)
                sleep(500)
                reconnect(bot:getWorld().name,"",tile.x,tile.y-1)

                bot:wrench(tile.x,tile.y)
                sleep(500)
                bot:sendPacket(2,"action|dialog_return\ndialog_name|lock_edit\ntilex|" .. tile.x .. "|\ntiley|" .. tile.y .. "|\ncheckbox_public|1\ncheckbox_disable_music|0\ntempo|100\ncheckbox_disable_music_render|0\ncheckbox_set_as_home_world|0\nminimum_entry_level|1")
                sleep(1500)
            end
        end
    end
    sleep(1000)
    for i, section in ipairs(divided_sections) do
        if math.floor(section.finish) == 99 then
            section.finish = math.floor(section.finish)-3
        end
        
        if math.floor(section.finish) == 0 then
            section.finish = math.floor(section.finish)+3
        end
        bot:findPath(math.floor(section.finish),8)
        sleep(500)
        while getTile(bot.x,bot.y).fg ~= IDDoor do
            places(IDDoor,0,0)
            sleep(250)
            reconnect(bot:getWorld().name,"",bot.x,bot.y)

        end
        if UsePlat then
        while getTile(bot.x,bot.y+1).fg ~= IDPlatform do
            places(IDPlatform,0,1)
            sleep(250)
            reconnect(bot:getWorld().name,"",bot.x,bot.y)
        end
    end
    end
    is = 1

    for key, tile in pairs(getTiles()) do
        if tile.fg == IDDoor then
            NewID = DoorID..is
            bot:findPath(tile.x,tile.y)
            sleep(300)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)

            print("WorldID : "..NewID)
            tulis(bot:getWorld().name..":"..NewID)

            bot:wrench(tile.x,tile.y)
            sleep(500)
            reconnect(bot:getWorld().name,"",tile.x,tile.y)
            if Mode == 1 then
                bot:sendPacket(2,"action|dialog_return\ndialog_name|door_edit\ntilex|"..tile.x.."|\ntiley|"..tile.y.."|\ndoor_name|APALIHATLIHAT\ndoor_target|\ndoor_id|"..NewID.."\ncheckbox_locked|1")
            else
                bot:sendPacket(2,"action|dialog_return\ndialog_name|door_edit\ntilex|"..tile.x.."|\ntiley|"..tile.y.."|\ndoor_name|APALIHATLIHAT\ndoor_target|\ndoor_id|"..NewID)
            end
            sleep(1500)
            is = is + 1
        end
    end
    table.insert(worldj,bot:getWorld().name)
    pep(Webhook,IDMessage)

end
    print("[Cema Script] [Status : Username Not Register!!!]")
end
