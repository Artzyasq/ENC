---------HIDDEN OPTIONS ROTATION---------
-----------------<UPPER>-----------------
MaxSeedGaia = 50                                                               --[Enter the max seed taken from Gaut]
SecWebhook = 'https://discord.com/api/webhooks/'
MaxSeed = 50
FinishOption = '2'                                                        --[Selections: 1.disconnect, 2.stop script, 3.remove bot, when finished pnb]
UseGaut = UseGaut:upper()
WebhookLive = WebhookLive:upper()
TakePickaxe = TakePickaxe:upper()
useAnimation = useAnimation:upper()
ChangeColour = ChangeColour:upper()
AutoChat = AutoChat:upper()
RemoveBot = RemoveBot:upper()
TakeGems = TakeGems:upper()
AutoRest = AutoRest:upper()
RestDisconnect = RestDisconnect:upper()
BuyPack = BuyPack:upper()
RandomPunch = RandomPunch:upper()
BreakOption = BreakOption:upper()
FinishOption = FinishOption:upper()
-----------------<BOT>-----------------
function AnimasiIni()
        if useAnimation:upper() == "TRUE" then
                return true
        elseif useAnimation:upper() == "FALSE" then
                return false
        end
end

function NoTakeGem()
        if TakeGems == "TRUE" then
                return false
        elseif TakeGems == "FALSE" then
                return true
        end
end

function IstirahatIni()
        if AutoRest:upper() == "TRUE" then
                return true
        elseif AutoRest:upper() == "FALSE" then
                return false
        end
end

bot = getBot()
bot.move_range = moveRange
bot.move_interval = moveInterval
bot.auto_reconnect = true
bot.reconnect_interval = AutoReconnect
bot.auto_collect = autocollect_setting
bot.collect_range = 3
bot.collect_interval = 100
bot.legit_mode = AnimasiIni()
bot.ignore_gems = NoTakeGem()
bot.auto_rest_mode = IstirahatIni()
bot.rest_time = RestTime
bot.rest_interval = RestInterval
bot.auto_leave_on_mod = true
SeedId = blockID + 1
selectedBot = {}

for _, botz in pairs(getBots()) do
    if botz.selected then
        table.insert(selectedBot,botz)
    end
end

for i, botz in pairs(getBots()) do
    if botz.name:upper() == bot.name:upper() then
        indexBot = i
    end
    indexLast = i
end
-----------------<NOUSE>-----------------
autocollect_setting = true
pnbInTutorial = false -- Pnb in Tutorial World. Auto PNB in WorldPnb if don't Have
whiteListOwner = "yourGrowID" -- So u wont get banned by Bot
whitelist_item = {5742, 5746, 5030, 1406} -- Bot Will Drop Items in list from BP
whitelist_drop_amount = 100 -- bot will drop if item > 100 in Backpack
world_whitelist = ""
door_whitelist = ""

AutoEmotList = {
    "/troll","/lol","/smile","/cry","/mad","/wave","/dance","/dab",
    "/love","/kiss","/sleep","/yes","/no","/wink","/cheer","/sad","/fp",
}

------------------ID------------------
BreakRange = {}
selectedBot = {}
emptyWorld = {}
maxGemsWorld = {}
worldNuked = false
wrenchP = false
Distance = Distance + 1
worldTutor = ""
noTutorWorld = false
randomWorld = {"ASMEI", "DAW", "QUCU", "GPX", "BUYPEPPER"}


gautReady = false
suckReady = false

WaktuAwal = os.time()
totalBlock = 0
totalPack = 0
totalSeed = 0
totalGems = 0
gaiaID = 6946
utID = 6948
------------------START------------------
for _, botz in pairs(getBots()) do
    if botz.selected then
        table.insert(selectedBot, botz)
    end
end

for i, botz in pairs(selectedBot) do
    if botz.name:upper() == bot.name:upper() then
        botIndex = i
    end
end

for i = math.floor(tileBreak/2),1,-1 do
    i = i * -1
    table.insert(BreakRange,i)
end

for i = 0, math.ceil(tileBreak/2) - 1 do
    table.insert(BreakRange,i)
end

for i, botz in pairs(selectedBot) do
    if botz.name:upper() == bot.name:upper() then
        PosX, PosY = PosX+Distance*(i-1), PosY
    end
end

function gscanFloat(id)
    return bot:getWorld().growscan:getObjects()[id] or 0
end

function gscanBlock(id)
    return bot:getWorld().growscan:getTiles()[id] or 0
end

function findItem(id)
    return bot:getInventory():findItem(id)
end

worldSeedIni, doorSeedIni = WorldSeed:upper():match("([^|]+):([^|]+)")

worldPackIni, doorPackIni = WorldPack:upper():match("([^|]+):([^|]+)")

worldPickaxeIni, doorPickaxeIni = WorldPickaxe:upper():match("([^|]+):([^|]+)")

world_whitelist = string.upper(world_whitelist)

function RandomPosition(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function PosisiDrop(x, y, num)
    local count = 0
    local stack = 0
    for _,obj in pairs(bot:getWorld():getObjects()) do
        if RandomPosition(obj.x / 32) == x and math.floor(obj.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if stack < 20 and count <= (4000 - num) then
        return true
    end
    return false
end

function AmbilUptime()
    local WaktuSekarang = os.time()
    local elapsedTime = WaktuSekarang - WaktuAwal
    local hours = math.floor(elapsedTime / 3600)
    local minutes = math.floor((elapsedTime % 3600) / 60)
    local seconds = math.floor(elapsedTime % 60)
    return string.format("%02d:%02d:%02d",hours,minutes,seconds)
end

function WebhookPertama(blocks, seeds, pack, gems)
    local PrimWebhook = Webhook.new(WebhookUrl)
    PrimWebhook.embed1.use = true
    PrimWebhook.username = "CEMA SCRIPT UPDATE"
    PrimWebhook.avatar_url = "https://cdn.discordapp.com/attachments/1024312738551443456/1218021025787154442/IMG-20240315-WA0049.png?ex=6606257a&is=65f3b07a&hm=a28a43e1d7091dcde289b5a09df396f11589210e2b6f8f1d7ea249b51080a301&"
    PrimWebhook.embed1.title = "GROWSCAN"
    PrimWebhook.embed1.thumbnail = "https://cdn.discordapp.com/attachments/1024312738551443456/1218021025787154442/IMG-20240315-WA0049.png?ex=6606257a&is=65f3b07a&hm=a28a43e1d7091dcde289b5a09df396f11589210e2b6f8f1d7ea249b51080a301&"
    PrimWebhook.embed1.color = 4120036
    PrimWebhook.embed1.description = ""

    if blocks then
        totalBlock = blocks
    end
    if seeds then
        totalSeed = seeds
    end
    if pack then
        totalPack = pack
    end
    if gems then
        totalGems = gems
    end

    PrimWebhook.embed1:addField("Storage Results", "\n<:gems:1006700641432895529> | Floating Gems: ".. totalGems .."\n<:lgrid:1083907700179611668> | Block Count: " .. totalBlock .. "\n<:seed_lgrid:1180420194905104434> | Seed Count: ".. totalSeed, false)
    PrimWebhook.embed1:addField("Last Seen"," <t:".. os.time() ..":R> **|** ||"..bot.name.."||**[**".. bot:getPing() .."**]**",false)


    local desc = ""
    for _, botz in pairs(getBots()) do
        if botz.selected == true then
            PrimWebhook.embed1:addField("<:farmerbot:1227256310878179338> ||".. botz.name:upper() .."||\nStatus: ".. getStatus(botz.status).." **[**".. bot:getPing() .."**]**\nLevel: ".. botz.level .."\nPlaytime: ".. bot:getAge() .." Days\nCoordinate: ".. "**[** " .. botz.x .. " **|** " .. botz.y .. " **]**", false)
            desc = desc
        end
    end


    PrimWebhook.embed1.footer.text = "Lucifer Uptime - " .. AmbilUptime() .."\nCema Script [PnB V2.0]"
    PrimWebhook.embed1.footer.icon_url = "https://cdn.discordapp.com/attachments/1024312738551443456/1218021025787154442/IMG-20240315-WA0049.png?ex=6606257a&is=65f3b07a&hm=a28a43e1d7091dcde289b5a09df396f11589210e2b6f8f1d7ea249b51080a301&"

    if WebhookLive:upper() == "TRUE" then
        PrimWebhook:edit(logWebhookID)
    else
        PrimWebhook:send()
    end
end

function getStatus(stat)
    local online = "Online <a:onlinegif:1179100715747131474>"
    local offline = "Offline <a:offlinegif:1179100927345561620>"
    if stat == BotStatus.online then
        return online
    else
        return offline
    end
end

function getBotList()
    local desc = ""
    for _, botz in pairs(selectedBot) do
        desc = desc .. "<:farmerbot:1227256310878179338> **||".. botz.name:upper() .."||**\nStatus: ".. getStatus(botz.status).. " **[**".. botz:getPing() .."**]**\nLevel: ".. botz.level .."\nCoordinate: **[** " .. botz.x .. " **|** " .. botz.y .. " **]**\n"
    end
    return desc
end

function WebhookKetiga(notify)
    local ThiWebhook = Webhook.new(SecWebhook)
    ThiWebhook.embed1.use = true
    ThiWebhook.username = "CEMA SCRIPT UPDATE"
    ThiWebhook.avatar_url = "https://cdn.discordapp.com/attachments/1024312738551443456/1218021025787154442/IMG-20240315-WA0049.png?ex=6606257a&is=65f3b07a&hm=a28a43e1d7091dcde289b5a09df396f11589210e2b6f8f1d7ea249b51080a301&"
    ThiWebhook.embed1.color = 4120036
    ThiWebhook.embed1.description = "**<:farmerbot:1227256310878179338> ".. bot.name:upper() ..". ".. notify .."**"
    ThiWebhook:send()
end

function WebhookKeempat(notify)
    local FouWebhook = Webhook.new(SecWebhook)
    FouWebhook.content = "@everyone"
    FouWebhook.embed1.use = true
    FouWebhook.username = "CEMA SCRIPT UPDATE"
    FouWebhook.avatar_url = "https://cdn.discordapp.com/attachments/1024312738551443456/1218021025787154442/IMG-20240315-WA0049.png?ex=6606257a&is=65f3b07a&hm=a28a43e1d7091dcde289b5a09df396f11589210e2b6f8f1d7ea249b51080a301&"
    FouWebhook.embed1.color = 4120036
    FouWebhook.embed1.description = "**<:farmerbot:1227256310878179338> ".. bot.name:upper() ..". ".. notify .."**"
    FouWebhook:send()
end

function checkNuked(variant, netid)
    if variant:get(0):getString() == "OnConsoleMessage" then
        if variant:get(1):getString():find("World is inaccessible, please Remove!") then
            worldNuked = true
        end
    end
end

function warps(worldName, doorID)
    worldNuked = false
    warpAttempt = 0
    addEvent(Event.variantlist, checkNuked)
    while not bot:isInWorld(worldName:upper()) and not worldNuked do
        print("[Cema Store] "..bot.name:upper().." Warping To "..worldName)
        sleep(math.random(100,200))
        WebhookKetiga("Warping To "..worldName)
        sleep(math.random(100,200))

        if bot.status == BotStatus.online and bot:getPing() == 0 then
            bot:disconnect()
            sleep(math.random(1000,2000))
        end

        while bot.status ~= BotStatus.online do
            sleep(math.random(8000,10000))
            while bot.status == BotStatus.account_banned do
                sleep(8000)
            end
        end

        if doorID ~= "" then
            bot:warp(worldName, doorID)
        else
            bot:warp(worldName)
        end

        listenEvents(6)

        if warpAttempt == 5 then
            print("[Cema Store] "..bot.name:upper().." Hard Warping!")
            sleep(math.random(100,200))
            WebhookKetiga("Hard Warping!")

            sleep(DelayHardWarp)

            bot:disconnect()
            sleep(math.random(8000,10000))
            while bot.status ~= BotStatus.online do
                sleep(math.random(8000,10000))
            end
            warpAttempt = 0
        else
            warpAttempt = warpAttempt + 1
        end

    end

    if worldNuked then
        print("[Cema Store] "..bot.name:upper().." Can't Join World Nuked!. World = "..worldName.."")
        sleep(math.random(100,200))
        WebhookKeempat("Can't Join "..worldName..". Nuked!")
        sleep(math.random(100,200))
    end

    if doorID ~= "" and getTile(bot.x, bot.y).fg == 6 then
        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(math.random(8000,10000))
            while bot.status == BotStatus.account_banned do
                print("[Cema Store] "..bot.name:upper().." Has Been Banned!")
                sleep(math.random(100,200))
                WebhookKeempat("Has Been Banned!")
                sleep(math.random(250,500))
                bot.auto_reconnect = false
                bot:stopScript()
            end
        end
        for i = 1,3 do
            if getTile(bot.x,bot.y).fg == 6 then
                bot:warp(worldName, doorID)
                sleep(math.random(1000,2000))
            end
        end
        if getTile(bot.x,bot.y).fg == 6 then
            print("[Cema Store] "..bot.name:upper().." Can't Entered Door At "..worldName.."")
            sleep(math.random(100,200))
            WebhookKetiga("Can't Entered Door At "..worldName.."")
            sleep(math.random(100,200))
            worldNuked = true
        end
    end
    sleep(math.random(100,200))
    removeEvent(Event.variantlist)
end

function reconnect(worldName, doorID, PosX, PosY)
    if AutoRest:upper() == "TRUE" and bot:isResting() then
        print("[Cema Store] "..bot.name:upper().." Resting!")
        sleep(math.random(100,200))
        WebhookKetiga("Resting!")
        sleep(math.random(250,500))

        while bot:isResting() do
            if RestDisconnect:upper() == "TRUE" and bot.status == BotStatus.online then
                bot.auto_reconnect = false
                bot:disconnect()
            else
                bot:leaveWorld()
            end
            sleep(math.random(8000,10000))
        end

        print("[Cema Store] "..bot.name:upper().." Reconnecting!")
        sleep(math.random(100,200))
        WebhookKetiga("Reconnecting!")
        sleep(math.random(100,200))

        bot.auto_reconnect = true

        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(math.random(8000,10000))
            if bot.status == BotStatus.account_banned then
                print("[Cema Store] "..bot.name:upper().." Has Been Banned!")
                sleep(math.random(100,200))
                WebhookKeempat("Has Been Banned!")
                sleep(math.random(250,500))
                bot.auto_reconnect = false
                bot:stopScript()
            end
        end

        while not bot:isInWorld(worldName:upper()) do
            bot:warp(worldName)
            sleep(DelayWarp)
        end

        if doorID ~= "" and getTile(bot.x,bot.y).fg == 6 then
            sleep(math.random(8000,10000))
            bot:warp(worldName, doorID)
            sleep(math.random(1000,2000))
        end

        if PosX and PosY and not bot:isInTile(PosX, PosY) then
            sleep(math.random(100,200))
            bot:findPath(PosX, PosY)
            sleep(math.random(100,200))
        end
        WebhookPertama(nil, nil, nil, nil)
    end
    if bot.status ~= BotStatus.online or bot:getPing() == 0 then
        WebhookPertama(nil, nil, nil, nil)

        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(math.random(8000,10000))
            if bot.status == BotStatus.account_banned then
                print("[Cema Store] "..bot.name:upper().." Has Been Banned!")
                sleep(math.random(100,200))
                WebhookKeempat("Has Been Banned!")
                sleep(math.random(250,500))
                bot.auto_reconnect = false
                bot:stopScript()
            end
        end

        while not bot:isInWorld(worldName:upper()) do
            bot:warp(worldName)
            sleep(DelayWarp)
        end

        if doorID ~= "" and getTile(bot.x,bot.y).fg == 6 then
            sleep(math.random(8000,10000))
            bot:warp(worldName, doorID)
            sleep(math.random(1000,2000))
        end

        if PosX and PosY and not bot:isInTile(PosX, PosY) then
            sleep(math.random(100,200))
            bot:findPath(PosX, PosY)
            sleep(math.random(100,200))
        end
        WebhookPertama(nil, nil, nil, nil)
    end
end

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function autoWear(itemID)
    bot.auto_collect = false
    bot.object_collect_delay = 100
    warps(worldPickaxeIni, doorPickaxeIni)
    if bot:isInWorld() then
        for _, obj in pairs(getObjects()) do
            reconnect(worldPickaxeIni, doorPickaxeIni)
            if obj.id == itemID then
                if #bot:getPath(math.floor(obj.x / 32)-1,math.floor(obj.y / 32)) > 0 then
                    bot:findPath(math.floor(obj.x / 32)-1,math.floor(obj.y / 32))
                    sleep(math.random(100,200))
                end
                bot:collectObject(obj.oid, 3)
                sleep(math.random(400,500))
            end
            if findItem(itemID) > 0 then
                break
            end
        end

        if findItem(itemID) > 1 then
            bot:setDirection(false)
            sleep(math.random(100,200))
            bot:drop(itemID, findItem(itemID)-1)
            sleep(math.random(400,500))
            while findItem(itemID) > 1 do
                bot:moveRight()
                sleep(math.random(100,200))
                bot:drop(itemID, findItem(itemID)-1)
                sleep(math.random(400,500))
                reconnect(worldPickaxeIni, doorPickaxeIni)
            end
        end

        if findItem(itemID) == 1 then
            if not getBot():getInventory():getItem(itemID).isActive then
                bot:wear(itemID)
                sleep(math.random(100,200))
            end
        else
            print("[Cema Store] "..bot.name:upper().." "..itemID.." Not Found")
            sleep(math.random(100,200))
            WebhookKetiga(""..itemID.." Not Found")
            sleep(math.random(100,200))
            sleep(3000)
            autoWear(itemID)
        end

    end
end

function tileDrop(x,y,num)
    local count = 0
    local stack = 0
    for _,obj in pairs(bot:getWorld():getObjects()) do
        if round(obj.x / 32) == x and math.floor(obj.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if stack < 20 and count <= (4000 - num) then
        return true
    end
    return false
end

function SimpanSeed()
    bot.auto_collect = false
    bot.collect_interval = 100
    warps(worldSeedIni, doorSeedIni)
    print("[Cema Store] "..bot.name:upper().." Saving Seed")
    sleep(math.random(100,200))
    WebhookKetiga("Saving Seed")
    sleep(math.random(100,200))

    if not worldNuked then
        if bot:isInWorld(worldSeedIni:upper()) then

            for _,tile in pairs(bot:getWorld():getTiles()) do
                if Marker:upper() == "TRUE" then
                    if tile.fg == MarkerID or tile.bg == MarkerID then
                        if PosisiDrop(tile.x, tile.y, bot:getInventory():findItem(SeedId)) then
                            bot:findPath(tile.x-1, tile.y)
                            bot:setDirection(false)
                            sleep(math.random(100,200))
                            if bot:getInventory():findItem(SeedId) > 0 and PosisiDrop(tile.x, tile.y, bot:getInventory():findItem(SeedId)) then
                                bot:sendPacket(2,"action|drop\n|itemID|"..SeedId)
                                sleep(math.random(250,500))
                                bot:sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..SeedId.."|\ncount|"..MaxSeed.."")
                                sleep(math.random(250,500))
                                reconnect(worldSeedIni, doorSeedIni, tile.x-1, tile.y)
                            end
                            if bot:getInventory():findItem(SeedId) <= 100 then
                                break
                            end
                        end
                    end
                else
                    if tile.x > bot.x and tile.y == bot.y and tile.x <= 99 then
                        if PosisiDrop(tile.x, tile.y, bot:getInventory():findItem(SeedId)) then
                            bot:findPath(tile.x-1, tile.y)
                            sleep(math.random(100,200))
                            bot:setDirection(false)
                            sleep(math.random(100,200))
                            reconnect(worldSeedIni, doorSeedIni, tile.x-1, tile.y)
                            if bot:getInventory():findItem(SeedId) > 0 and PosisiDrop(tile.x, tile.y, bot:getInventory():findItem(SeedId)) then
                                bot:findPath(tile.x-1, tile.y)
                                sleep(math.random(250,500))
                                bot:fastDrop(SeedId, findItem(SeedId))
                                sleep(math.random(250,500))
                                reconnect(worldSeedIni, doorSeedIni, tile.x-1, tile.y)
                            end
                        end
                    end
                    if bot:getInventory():findItem(SeedId) == 0 then
                        break
                    end
                end
            end
            WebhookPertama(nil, gscanFloat(SeedId), nil, nil)
            sleep(math.random(100,200))
        end
    end
end

function dropItem(itemID)
    print("[Cema Store] "..bot.name:upper().." Saving "..itemID)
    sleep(math.random(100,200))
    WebhookKetiga("Saving "..itemID)
    sleep(math.random(100,200))

    bot.auto_collect = false
    bot.object_collect_delay = 60000
    if worldSeedIni:upper() == blockWorld:upper() then
        bot:warp(worldSeedIni, doorSeedIni)
        sleep(math.random(1000,2000))
    else
        warps(worldSeedIni, doorSeedIni)
    end
    if bot:isInWorld(worldSeedIni:upper()) then
        ye = bot.y
        for _, tile in pairs(getTiles()) do
            reconnect(worldSeedIni, doorSeedIni)
            if tile.y == ye and tile.x > bot.x and tile.x <= 99 then
                if tileDrop(tile.x, tile.y, findItem(itemID)) then
                    bot:findPath(tile.x-1, tile.y)
                    bot:setDirection(false)
                    sleep(math.random(100,200))
                    bot:drop(itemID, findItem(itemID))
                    sleep(math.random(400,500))
                    while findItem(itemID) > 0 and getTile(bot.x+1, bot.y).fg == 0 do
                        bot:moveRight()
                        sleep(math.random(100,200))
                        bot:drop(itemID, findItem(itemID))
                        sleep(math.random(400,500))
                        reconnect(worldSeedIni, doorSeedIni)
                    end
                end
            end
            if findItem(itemID) == 0 then
                break
            end
        end
        WebhookPertama(nil, gscanFloat(SeedId), nil, nil)
    end
end

function dropGoodItem(itemID)
    bot.auto_collect = false
    warps(world_whitelist:upper(), door_whitelist)

    print("[Cema Store] "..bot.name:upper().." Saving Itemid "..itemID)
    sleep(math.random(100,200))
    WebhookKetiga("Saving Itemid "..itemID)
    sleep(math.random(100,200))

    if bot:isInWorld(world_whitelist:upper()) then
        ye = bot.y
        for _, tile in pairs(getTiles()) do
            reconnect(world_whitelist, door_whitelist)
            if tile.y == ye and tile.x > bot.x and tile.x <= 99 then
                if tileDrop(tile.x, tile.y, findItem(itemID)) then
                    bot:findPath(tile.x-1, tile.y)
                    bot:setDirection(false)
                    sleep(math.random(100,200))
                    bot:drop(itemID, findItem(itemID))
                    sleep(math.random(400,500))
                    while findItem(itemID) > 0 and getTile(bot.x+1, bot.y).fg == 0 do
                        bot:moveRight()
                        sleep(math.random(100,200))
                        bot:drop(itemID, findItem(itemID))
                        sleep(math.random(400,500))
                        reconnect(world_whitelist, door_whitelist)
                    end
                end
            end
            if findItem(itemID) == 0 then
                break
            end
        end
    end
end

function takeBlockMain()
    bot.auto_collect = false
    bot.object_collect_delay = 100
    for _, bWorld in pairs(WorldBlock) do
        blockWorld = bWorld:upper()
        if not emptyWorld[blockWorld] then
            warps(blockWorld, IdDoorBlock)
            if not worldNuked then
                print("[Cema Store] "..bot.name:upper().." Taking Block")
                sleep(math.random(100,200))
                WebhookKetiga("Taking Block")
                sleep(math.random(100,200))

                if bot:isInWorld(blockWorld:upper()) then
                    if gscanFloat(blockID) > 0 then
                        takeItem(blockID, 200)
                        sleep(math.random(100,200))
                        WebhookPertama(gscanFloat(blockID), nil, nil, nil)
                    else
                        print("[Cema Store] "..bot.name:upper().." Block Not Found At "..blockWorld)
                        sleep(math.random(100,200))
                        WebhookKetiga("Block Not Found At "..blockWorld)
                        sleep(math.random(100,200))

                        emptyWorld[blockWorld] = true
                        if blockWorld == string.upper(WorldBlock[#WorldBlock]) and findItem(blockID) == 0 then
                            print("[Cema Store] "..bot.name:upper().." "..blockWorld.." Is Last World")
                            sleep(math.random(100,200))
                            WebhookKetiga(""..blockWorld.." Is Last World")
                            sleep(math.random(100,200))

                            if findItem(SeedId) > 0 then
                                SimpanSeed()
                                sleep(math.random(100,200))
                            end
                            if FinishOption:upper() == "1" then
                                bot.auto_reconnect = false
                                bot:disconnect()
                                bot:stopScript()
                            elseif FinishOption:upper() == "2" then
                                bot:stopScript()
                            elseif FinishOption:upper() == "3" then
                                RemoveBot(bot.name)
                            end
                        end
                    end
                    if findItem(blockID) > 0 then
                        break
                    end
                end
            end
        end
    end
end

function takeItem(itemID, amount)
    bot.auto_collect = false
    bot.object_collect_delay = 100
    warps(blockWorld, IdDoorBlock)
    for _, obj in pairs(getObjects()) do
        reconnect(blockWorld, IdDoorBlock)
        if obj.id == itemID then
            if #bot:getPath(math.floor(obj.x / 32),math.floor(obj.y / 32)) > 0 then
                bot:findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(math.random(100,200))
            end
            bot:collectObject(obj.oid, 3)
            sleep(math.random(400,500))
            reconnect(blockWorld, IdDoorBlock)
        end
        if findItem(itemID) >= amount then
            break
        end
    end

    while findItem(itemID) > amount and getTile(bot.x+1, bot.y).fg == 0 do
        bot:setDirection(false)
        bot:drop(itemID, findItem(itemID)-amount)
        sleep(math.random(400,500))
        if findItem(itemID) > amount and getTile(bot.x+1, bot.y).fg == 0 then
            bot:moveRight()
            sleep(math.random(100,200))
        end
        reconnect(blockWorld, IdDoorBlock)
    end
end

function trashJunk()
    for _, trash in pairs(BotTrashId) do
        if findItem(trash) > 100 then
            bot:trash(trash, findItem(trash))
            sleep(math.random(8000,10000))
        end
    end
end

function PNB()
    warps(pnbWorld, IdDoor)
    if bot:isInWorld(pnbWorld:upper()) then

        print("[Cema Store] "..bot.name:upper().." Pnb At World")
        sleep(math.random(100,200))
        WebhookKetiga("Pnb At World")
        sleep(math.random(100,200))
        WebhookPertama(nil, nil, nil, gscanFloat(112))
        sleep(math.random(100,200))

        if not bot:isInTile(PosX, PosY) and #bot:getPath(PosX, PosY) > 0 then
            bot:findPath(PosX, PosY)
            sleep(math.random(100,200))
        end

        bot.auto_collect = autocollect_setting
        bot.object_collect_delay = 150
        bot.ignore_gems = NoTakeGem()

        if BreakOption:upper() == "UP" then
            while findItem(blockID) > 0 and findItem(SeedId) < 196 and bot:isInWorld(pnbWorld:upper()) and getTile(bot.x, bot.y).fg ~= 6 do

                for _,i in pairs(BreakRange) do
                    if getTile(PosX + i, PosY - 2).fg == 0 and getTile(PosX + i, PosY - 2).bg == 0 then
                        bot:place(bot.x + i, bot.y - 2, blockID)
                        sleep(DelayPlace)
                        reconnect(pnbWorld, IdDoor, PosX, PosY)
                    end
                end

                for _,i in pairs(BreakRange) do
                    while getTile(PosX + i, PosY - 2).fg ~= 0 or getTile(PosX + i, PosY - 2).bg ~= 0 do
                        bot:hit(bot.x + i, bot.y - 2)
                        if RandomPunch:upper() == "TRUE" then
                            sleep(math.random(DelayPunch - DelayRandomPunch,DelayPunch + DelayRandomPunch))
                        else
                            sleep(DelayPunch)
                        end
                        reconnect(pnbWorld, IdDoor, PosX, PosY)
                    end
                end
            end
        elseif BreakOption:upper() == "DOWN" then
            while findItem(blockID) > 0 and findItem(SeedId) < 196 and bot:isInWorld(pnbWorld:upper()) and getTile(bot.x, bot.y).fg ~= 6 do

                for _,i in pairs(BreakRange) do
                    if getTile(PosX + i, PosY + 2).fg == 0 and getTile(PosX + i, PosY + 2).bg == 0 then
                        bot:place(bot.x + i, bot.y + 2, blockID)
                        sleep(DelayPlace)
                        reconnect(pnbWorld, IdDoor, PosX, PosY)
                    end
                end

                for _,i in pairs(BreakRange) do
                    while getTile(PosX + i, PosY + 2).fg ~= 0 or getTile(PosX + i, PosY + 2).bg ~= 0 do
                        bot:hit(bot.x + i, bot.y + 2)
                        if RandomPunch:upper() == "TRUE" then
                            sleep(math.random(DelayPunch - DelayRandomPunch,DelayPunch + DelayRandomPunch))
                        else
                            sleep(DelayPunch)
                        end
                        reconnect(pnbWorld, IdDoor, PosX, PosY)
                    end
                end
            end
        end
    end

end

function checkWrench(varlist, netid)
    if varlist:get(0):getString() == "OnDialogRequest" and varlist:get(1):getString():find("my_worlds") then
        wrenchP = true
        unlistenEvents()
    end
end

function checkMyWorld(varlist, netid)
    if varlist:get(0):getString() == "OnDialogRequest" and varlist:get(1):getString():find("add_button") then
        teks = varlist:get(1):getString()
        worldTutor = string.match(teks, "add_button|([^|]+)|")
        print("[Cema Store] "..bot.name:upper().." Home World = "..worldTutor.."")
        sleep(math.random(100,200))
        WebhookKetiga("Home World = "..worldTutor.."")
        sleep(math.random(250,500))
        unlistenEvents()
    end
end

function checkTutorial()
    worldTutor = ""
    while not bot:isInWorld() do
        bot:warp(randomWorld[math.random(1, #randomWorld)])
        sleep(DelayWarp)
    end
    if bot:isInWorld() then
        netidd = getLocal().netid
        addEvent(Event.variantlist, checkWrench)
        bot:wrenchPlayer(netidd)
        listenEvents(5)
        if wrenchP then
            addEvent(Event.variantlist, checkMyWorld)
            bot:sendPacket(2, "action|dialog_return\ndialog_name|popup\nnetID|".. netidd .."|\nbuttonClicked|my_worlds")
            listenEvents(5)
        end
        removeEvent(Event.variantlist)
    end
end

function PNBTutorial()
    warps(worldTutor, "")
    if not worldNuked then
        PosX, PosY = 50, 23
        if bot:isInWorld(worldTutor:upper()) and hasAccess(bot.x-1, bot.y) > 0 then
            print("[Cema Store] "..bot.name:upper().." Pnb At Home World")
            sleep(math.random(100,200))
            WebhookKetiga("Pnb At Home World")
            sleep(math.random(250,500))

            if not bot:isInTile(PosX, PosY) and #bot:getPath(PosX, PosY) > 0 then
                bot:findPath(PosX, PosY)
                sleep(math.random(100,200))
            end

            if ChangeColour:upper() == "TRUE" then
                bot:setSkin(math.random(3,7))
                sleep(math.random(100,200))
            end

            if AutoChat:upper() == "TRUE" then
                chatBot = AutoChatList[math.random(1,#AutoChatList)]
                bot:say(chatBot)
                sleep(math.random(800,1000))
                chatBot = AutoEmotList[math.random(1,#AutoEmotList)]
                bot:say(chatBot)
                sleep(math.random(800,1000))
            end

            bot.auto_collect = autocollect_setting
            bot.object_collect_delay = 150
            bot.ignore_gems = NoTakeGem()

            while findItem(blockID) > 0 and findItem(SeedId) < 196 and bot:isInWorld(worldTutor:upper()) and getTile(bot.x, bot.y).fg ~= 6 do

                for i,player in pairs(getPlayers()) do
                    if player.netid ~= getLocal().netid and player.name:upper() ~= whiteListOwner:upper() then
                        bot:say("/ban " .. player.name)
                        sleep(math.random(8000,10000))
                    end
                end

                for _,i in pairs(BreakRange) do
                    if getTile(PosX + i, PosY - 2).fg == 0 and getTile(PosX + i, PosY - 2).bg == 0 then
                        bot:place(bot.x + i, bot.y - 2, blockID)
                        sleep(DelayPlace)
                        reconnect(worldTutor, "", PosX, PosY)
                    end
                end

                for _,i in pairs(BreakRange) do
                    while getTile(PosX + i, PosY - 2).fg ~= 0 or getTile(PosX + i, PosY - 2).bg ~= 0 do
                        bot:hit(bot.x + i, bot.y - 2)
                        if RandomPunch:upper() == "TRUE" then
                            sleep(math.random(DelayPunch - DelayRandomPunch,DelayPunch + DelayRandomPunch))
                        else
                            sleep(DelayPunch)
                        end
                        reconnect(worldTutor, "", PosX, PosY)
                    end
                end

            end
        end
    end
    if worldNuked then
        print("[Cema Store] "..bot.name:upper().." Home World Got Nuked")
        sleep(math.random(100,200))
        WebhookKeempat("Home World Got Nuked")
        sleep(math.random(250,500))
        Pokok()
    end
end

function BuyPacks()
    print("[Cema Store] "..bot.name:upper().." Buying Pack")
    sleep(math.random(100,200))
    WebhookKetiga("Buying Pack")
    sleep(math.random(250,500))
    bot.auto_collect = false
    warps(worldPackIni, doorPackIni)
    if bot:isInWorld() then
        availSlot = getBot():getInventory().slotcount - getBot():getInventory().itemcount
        while bot.gem_count >= BuyPackPrice and availSlot > 0 do
            bot:buy(NamePack:lower())
            sleep(math.random(1000,2000))
            reconnect(worldPackIni, doorPackIni)
            for _, itemz in pairs(BuyPackNumber) do
                if findItem(itemz) > 190 then
                    dropPack()
                    reconnect(worldPackIni, doorPackIni)
                end
            end
        end
        dropPack()
    end
end

function dropPack()
    bot.auto_collect = false
    warps(worldPackIni, doorPackIni)
    for _, pack in pairs(BuyPackNumber) do
        if findItem(pack) > 0 then
            bot:drop(pack, findItem(pack))
            sleep(math.random(400,500))
            reconnect(worldPackIni, doorPackIni)
            while findItem(pack) > 0 do
                bot:moveRight()
                sleep(math.random(100,200))
                bot:drop(pack, findItem(pack))
                sleep(math.random(400,500))
                reconnect(worldPackIni, doorPackIni)
            end
        end
    end
    WebhookPertama(nil, nil, scanPack(), nil)
end

function scanPack()
    local totalPack = 0
    for _, obj in pairs(getObjects()) do
        for _, pid in ipairs(BuyPackNumber) do
            if obj.id == pid then
                totalPack = totalPack + obj.count
            end
        end
    end
    return totalPack
end

function scanSeedGaia()
    return getTile(gaiaX, gaiaY):getExtra().item_count
end

function autoRemove()
    if bot.level >= RemoveLvl then
        print("[Cema Store] "..bot.name:upper().." Reach Max Limit Level")
        sleep(math.random(100,200))
        WebhookKeempat("Reach Max Limit Level")
        sleep(math.random(250,500))
        if findItem(blockID) > 0 then
            dropItem(blockID)
            sleep(math.random(100,200))
        end
        if findItem(SeedId) > 0 then
            SimpanSeed()
            sleep(math.random(100,200))
        end
        if BuyPack:upper() == "TRUE" and bot.gem_count >= BuyPackPrice then
            BuyPacks()
            sleep(math.random(100,200))
        end
        RemoveBot(bot.name)
    end
end

function scanGaut()
    for _, tile in pairs(getTiles()) do
        if tile.fg == gaiaID and hasAccess(tile.x, tile.y) > 0 then
            gaiaX, gaiaY = tile.x, tile.y
        end
        if tile.fg == utID and hasAccess(tile.x, tile.y) > 0 then
            utX, utY = tile.x, tile.y
        end
    end
end

function itemInGaia(varlist, netid)
    if varlist:get(0):getString() == "OnDialogRequest" and varlist:get(1):getString():find("The machine contains") then
        teks = varlist:get(1):getString()
        totalItemInGaia = tonumber(string.match(teks, "contains (%d+)"))
        gaiaReady = true
        unlistenEvents()
    end
end

function itemInUT(varlist, netid)
    if varlist:get(0):getString() == "OnDialogRequest" and varlist:get(1):getString():find("The machine contains") then
        teks = varlist:get(1):getString()
        totalitemInUT = tonumber(string.match(teks, "contains (%d+)"))
        utReady = true
        unlistenEvents()
    end
end

function retGaia()
    gaiaReady = false
    warps(pnbWorld, IdDoor)
    if bot:isInWorld(pnbWorld:upper()) then
        if not bot:findPath(gaiaX, gaiaY-1) then
            bot:findPath(gaiaX, gaiaY+1)
        end
        sleep(math.random(100,200))

        if bot:isInTile(gaiaX, gaiaY-1) or bot:isInTile(gaiaX, gaiaY+1) and getTile(gaiaX, gaiaY).fg == gaiaID then
            addEvent(Event.variantlist, itemInGaia)
            bot:wrench(gaiaX, gaiaY)
            listenEvents(2)
            if gaiaReady then
                bot:sendPacket(2, "action|dialog_return\ndialog_name|itemsucker_seed\ntilex|"..gaiaX.."|\ntiley|"..gaiaY.."|\nbuttonClicked|retrieveitem\n\nchk_enablesucking|1")
                sleep(math.random(8000,10000))
                if totalItemInGaia > 200 then
                    bot:sendPacket(2, "action|dialog_return\ndialog_name|itemremovedfromsucker\ntilex|"..gaiaX.."|\ntiley|"..gaiaY.."|\nitemtoremove|200")
                    sleep(math.random(400,500))
                elseif totalItemInGaia > 0 then
                    bot:sendPacket(2, "action|dialog_return\ndialog_name|itemremovedfromsucker\ntilex|"..gaiaX.."|\ntiley|"..gaiaY.."|\nitemtoremove|"..totalItemInGaia)
                    sleep(math.random(400,500))
                end
            end
            removeEvent(Event.variantlist)
        end

    end
end

function retUt()
    utReady = false
    warps(pnbWorld, IdDoor)
    if bot:isInWorld(pnbWorld:upper()) then
        if not bot:findPath(utX, utY-1) then
            bot:findPath(utX, utY+1)
        end
        sleep(math.random(100,200))

        if bot:isInTile(utX, utY-1) or bot:isInTile(utX, utY+1) and getTile(utX, utY).fg == utID then
            addEvent(Event.variantlist, itemInUT)
            bot:wrench(utX, utY)
            listenEvents(2)
            if utReady then
                bot:sendPacket(2, "action|dialog_return\ndialog_name|itemsucker_block\ntilex|"..utX.."|\ntiley|"..utY.."|\nbuttonClicked|retrieveitem\n\nchk_enablesucking|1")
                sleep(math.random(8000,10000))
                if totalitemInUT > 200 then
                    bot:sendPacket(2, "action|dialog_return\ndialog_name|itemremovedfromsucker\ntilex|"..utX.."|\ntiley|"..utY.."|\nitemtoremove|200")
                    sleep(math.random(400,500))
                elseif totalitemInUT > 0 then
                    bot:sendPacket(2, "action|dialog_return\ndialog_name|itemremovedfromsucker\ntilex|"..utX.."|\ntiley|"..utY.."|\nitemtoremove|"..totalitemInUT)
                    sleep(math.random(400,500))
                end
            end
            removeEvent(Event.variantlist)
        end

    end
end

function dropGoods()
    for _, itemz in pairs(whitelist_item) do
        if findItem(itemz) > whitelist_drop_amount then
            dropGoodItem(itemz)
            sleep(math.random(100,200))
        end
    end
end

function Pokok()
    for _, pnbW in pairs(WorldPnb) do
        pnbWorld = pnbW:upper()
        if not maxGemsWorld[pnbWorld] then
            warps(pnbWorld, IdDoor)
            if not worldNuked then
                if bot:isInWorld(pnbWorld) then
                    if gscanFloat(112) <= MaxGems then
                        while gscanFloat(112) <= MaxGems do
                            trashJunk()
                            sleep(math.random(100,200))
                            scanGaut()
                            sleep(math.random(100,200))

                            if RemoveBot:upper() == "TRUE" and bot.level > RemoveLvl then
                                autoRemove()
                                sleep(math.random(100,200))
                            end

                            if TakePickaxe:upper() == "TRUE" and findItem(PickaxeId) == 0 then
                                autoWear(PickaxeId)
                                sleep(math.random(100,200))
                            end

                            if BuyPack:upper() == "TRUE" and bot.gem_count >= BuyItemGems then
                                BuyPacks()
                                sleep(math.random(100,200))
                            end

                            if findItem(blockID) < 196 then
                                takeBlockMain()
                                sleep(math.random(100,200))
                                dropGoods()
                            end

                            if findItem(SeedId) >= MaxSeed then
                                SimpanSeed()
                                sleep(math.random(100,200))
                            end

                            PNB()
                            sleep(math.random(100,200))

                            if ChangeColour:upper() == "TRUE" then
                                bot:setSkin(math.random(3,7))
                                sleep(math.random(100,200))
                            end

                            if AutoChat:upper() == "TRUE" then
                                chatBot = AutoChatList[math.random(1,#AutoChatList)]
                                bot:say(chatBot)
                                sleep(math.random(800,1000))
                                chatBot = AutoEmotList[math.random(1,#AutoEmotList)]
                                bot:say(chatBot)
                                sleep(math.random(800,1000))
                            end

                            WebhookPertama(nil, nil, nil, gscanFloat(112))
                            sleep(math.random(100,200))

                            if UseGaut:upper() == "TRUE" and getTile(gaiaX, gaiaY):getExtra().item_count > MaxSeedGaia then
                                retGaia()
                                sleep(math.random(100,200))
                                retUt()
                                sleep(math.random(100,200))

                                if findItem(blockID) < 196 then
                                    takeBlockMain()
                                    dropGoods()
                                    sleep(math.random(100,200))
                                end

                                if findItem(SeedId) > 0 then
                                    SimpanSeed()
                                    sleep(math.random(100,200))
                                end

                                if TakePickaxe:upper() == "TRUE" and findItem(PickaxeId) == 0 then
                                    autoWear(PickaxeId)
                                    sleep(math.random(100,200))
                                end

                                if BuyPack:upper() == "TRUE" and bot.gem_count >= BuyItemGems then
                                    BuyPacks()
                                    sleep(math.random(100,200))
                                end
                            end

                            warps(pnbWorld, IdDoor)
                        end
                    else
                        maxGemsWorld[pnbWorld] = true
                        if pnbWorld:upper() == string.upper(WorldPnb[#WorldPnb]) then
                            print("[Cema Store] "..bot.name:upper().." World "..pnbWorld.." Is Last World")
                            sleep(math.random(100,200))
                            WebhookKeempat("World "..pnbWorld.." Is Last World")
                            sleep(math.random(250,500))

                            if findItem(blockID) > 0 then
                                dropItem(blockID)
                            end
                            if findItem(SeedId) > 0 then
                                SimpanSeed()
                            end
                            if FinishOption:upper() == "1" then
                                bot.auto_reconnect = false
                                bot:disconnect()
                                bot:stopScript()
                            elseif FinishOption:upper() == "2" then
                                bot:stopScript()
                            elseif FinishOption:upper() == "3" then
                                RemoveBot(bot.name)
                            end
                        end
                    end
                end
            end
        end
    end
end

function JalanIni()
    if pnbInTutorial then
        for i = 1,3 do
            if worldTutor == "" then
                checkTutorial()
                sleep(math.random(100,200))
            end
        end

        if worldTutor == "" then
            print("[Cema Store] "..bot.name:upper().." Dont Have Home World!")
            sleep(math.random(100,200))
            WebhookKeempat("Dont Have Home World!")
            sleep(math.random(250,500))
            noTutorWorld = true
        end

        if not noTutorWorld then
            while true do
                trashJunk()
                sleep(math.random(100,200))

                if RemoveBot:upper() == "TRUE" and bot.level > RemoveLvl then
                    autoRemove()
                    sleep(math.random(100,200))
                end

                if TakePickaxe:upper() == "TRUE" and findItem(PickaxeId) == 0 then
                    autoWear(PickaxeId)
                    sleep(math.random(100,200))
                end

                if BuyPack:upper() == "TRUE" and bot.gem_count >= BuyItemGems then
                    BuyPacks()
                    sleep(math.random(100,200))
                end

                if findItem(blockID) < 196 then
                    takeBlockMain()
                    sleep(math.random(100,200))
                    dropGoods()
                end

                if findItem(SeedId) >= MaxSeed then
                    SimpanSeed()
                    sleep(math.random(100,200))
                end

                PNBTutorial()
                sleep(math.random(100,200))

                if ChangeColour:upper() == "TRUE" then
                    bot:setSkin(math.random(3,7))
                    sleep(math.random(100,200))
                end

                if AutoChat:upper() == "TRUE" then
                    chatBot = AutoChatList[math.random(1,#AutoChatList)]
                    bot:say(chatBot)
                    sleep(math.random(800,1000))
                    chatBot = AutoEmotList[math.random(1,#AutoEmotList)]
                    bot:say(chatBot)
                    sleep(math.random(800,1000))
                end

                WebhookPertama(nil, nil, nil, gscanFloat(112))
                sleep(math.random(100,200))
            end
        end
    end

    if not pnbInTutorial or noTutorWorld then
        Pokok()
    end
end

while bot.status ~= BotStatus.online do
    sleep(math.random(500,1000))
end
----------------------------------------------------------------------
function isLicenseValid()
    local client = HttpClient.new()
    client.url = "https://raw.githubusercontent.com/Artzyasq/LICENSE-1/main/PNB"
    local licenses = load(client:request().body)()
    for key, value in pairs(licenses) do
        if value == getUsername() then
            return true
        end
    end
    return false
end

print("[Cema Script] [Username = " ..getUsername().."]")
if isLicenseValid() then
    print("[Cema Script] [Status : Success Login]")
----------------------------------------------------------------------
    JalanIni()
else
    print("[Cema Script] [Status : Username Not Register!!!]")
end
